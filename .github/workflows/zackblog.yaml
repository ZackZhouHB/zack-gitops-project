name: "zack gitops workflow for blog"
on: 
  push: 
    branches:
      - main
      - editing
    paths:             # any change in folder "terraform" 
      - zack_blog/**   # for both stage and main, will trigger workflow
  
  pull_request:        # no one can commit to main except approvel needed from main branch owner
    branches:          # raise pull_request when merge from stage to main
      - main           # will trigger workflow
    paths:          
      - zack_blog/**

env:                   # cred for AWS access, terrform is looking for      
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # also can be stored in github var
  AWS_DEFAULT_REGION: ap-southeast-2
  EKS_CLUSTER: zack-gitops-eks-prod

jobs: 
  terraform:   # create a ubuntu container, cd to terraform dir, checkout source code
    name: "apply iaac code change"
    runs-on: ubuntu-latest    # from github runners containers 
    defaults:
      run:
        shell: bash
        working-directory: ./zack_blog
    
    steps:

      - name: SCM checkout
        uses: actions/checkout@v3

      - name: Configure AWS cli on runners
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY"
          echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.x # Set your Ruby version

      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install

      - name: Set up Docker
        uses: docker/setup-docker@v1

      - name: Configure Docker Hub Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t your-dockerhub-username/your-image-name:${{ github.sha }} .
          docker push your-dockerhub-username/your-image-name:${{ github.sha }}
